#lang scribble/base

代码降临节（Advent of Code）是始于2015年的年度编程挑战活动，
也是圣诞日历文化在科技圈的延伸。活动每年12月1日开始，由一个或一系列虚构的故事引出，
参与者每天用代码解两个谜题，一直到圣诞节当天结束，共计25天50个谜题。
虽然活动发生在每年的最后一个月，但出题人事先要花4-5个月（的业余时间）来准备；
活动也不要求参与者一定要在规定时间内完成，以往的谜题也可以随时查看。

此挑战活动不要求参与者有计算机科班背景，对语言、软件和硬件配置也没有要求。
懂点编程基础知识、有一定的问题求解技巧即可开始。总之，青少练手、大学课程项目、
面试热身、企业培训，等等。各种级别的参与者都能从中找到价值。

我更关注帮你建立@bold{学习新语言}的元认知能力（推广到终身学习范畴，
即@bold{像学神一样学习}的能力）。从现在开始，你会不断看到别人问
“语言到底重不重要”。很明显这个问题的答案跟时间有关，你人生的不同阶段、
你目标的不同都会有不同回答。所以，我不建议你去看别人的相关讨论，
网络上大多都是些“只见树木不见森林”的无效讨论；
时机到了，你自己知道如何正确思考这个问题。
 
在本文中，解谜的范式和工具主要是@emph{函数式思维}和
@hyperlink["https://racket-lang.org/"]{Racket}。
这里的函数更接近数学函数，而非一般程序语言里的函数；
解谜思路也更像代数中的变量替换和函数复合，而非指令的下达和执行。
如果你没有学过编程，那再好不过，直接从贴近人类思维的数学视角进入；
如果你只上过常规编程课，请暂时忘记机器视角、做好思维提升的准备。
远征过程可能会出现函数式不擅长的问题，届时我们也不会犹豫使用其他思路来求解。

@bold{程序语言理论中的概念在不同语言中有不同叫法，我将以 Racket 中的名称为准，因为
 它在程序语言理论中的权威性最高。普通软件工程师不必非学这门语言，只有当你对计算机科学
 有憧憬时，你才必然在自己学术生涯的某个阶段里遇见它，你对程序语言的世界观很可能也将
 彻底改变。}
